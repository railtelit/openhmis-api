apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-api
  namespace: openhmis
spec:
  selector:
    matchLabels:
      app: admin-api
  template:
    metadata:
      labels:
        app: admin-api
    spec:
      hostAliases:
        - ip: "10.11.2.131"
          hostnames:
            - "auth.openhmis.erpapps.in"
      imagePullSecrets:
        - name: jfrogcred
      containers:      
      - name: admin-api        
        image: railtelhrit.jfrog.io/openhmis-docker/admin-api:latest
        env:
            - name: "PORT"
              value: "3000"
            - name: "MONGODB_HOST"
              value: "mongo-service"
            - name: "MONGODB_PORT"
              value: "27017"
            - name: "KAFKA_BROKER_ADDRESSLIST"
              value: "kafka-cluster-kafka-brokers.kafka:9092"
            - name: "NDHM_CLIENT_HOST"
              value: "ndhm-client-service"
            - name: "NDHM_CLIENT_PORT"
              value: "3000"
            - name: "KEYCLOAK_URL"
              value: "https://auth.openhmis.erpapps.in"
            - name: "ADMINAPI_CLIENT_ID"
              valueFrom:
                secretKeyRef:
                  key: ADMINAPI_CLIENT_ID
                  name: keycloaksecret
            - name: "ADMINAPI_CLIENT_SECRET"
              valueFrom:
                secretKeyRef:
                  key: ADMINAPI_CLIENT_SECRET
                  name: keycloaksecret
        resources:
          limits:
            memory: "228Mi"
            cpu: "500m"
            ephemeral-storage: 1Gi
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: admin-api-service
  namespace: openhmis
spec:
  selector:
    app: admin-api
  ports:
  - port: 3000
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-api-ingress
  namespace: openhmis
  labels:
    name: admin-api-ingress
spec:
  ingressClassName: nginx  
  rules:
  - host: api.openhmis.erpapps.in
    http:
      paths:
      - pathType: Prefix
        path: "/admin/"        
        backend:
          service:
            name: admin-api-service
            port: 
              number: 3000          
